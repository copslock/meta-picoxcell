From 15fd5d3b3b2cb6aecb6e8ea368467f0c7c2b3ebc Mon Sep 17 00:00:00 2001
From: Dave Aldridge <david.aldridge@picochip.com>
Date: Tue, 19 Apr 2011 10:21:43 +0100
Subject: [PATCH 07/70] picoxcell: move some startup functions from board to picoxcell

Some common startup functions have been moved from board specific
code to picocxcell specific code.
---
 arch/arm/cpu/arm926ejs/picoxcell/Makefile       |    1 +
 arch/arm/cpu/arm926ejs/picoxcell/cpu.c          |   95 +++++++++++++++++++++
 arch/arm/cpu/arm926ejs/picoxcell/utilities.c    |   22 +++++
 arch/arm/include/asm/arch-picoxcell/utilities.h |    8 ++
 board/picochip/pc7302/pc7302.c                  |  101 ++---------------------
 include/configs/picochippc7302-common.h         |    3 +
 6 files changed, 137 insertions(+), 93 deletions(-)
 create mode 100644 arch/arm/cpu/arm926ejs/picoxcell/cpu.c

diff --git a/arch/arm/cpu/arm926ejs/picoxcell/Makefile b/arch/arm/cpu/arm926ejs/picoxcell/Makefile
index 91d9792..fbf27fd 100644
--- a/arch/arm/cpu/arm926ejs/picoxcell/Makefile
+++ b/arch/arm/cpu/arm926ejs/picoxcell/Makefile
@@ -44,6 +44,7 @@ LIB	= $(obj)lib$(SOC).o
 
 SOBJS-y := reset.o
 
+COBJS-y += cpu.o
 COBJS-y += emac.o
 COBJS-y += timer.o
 COBJS-y += spi.o
diff --git a/arch/arm/cpu/arm926ejs/picoxcell/cpu.c b/arch/arm/cpu/arm926ejs/picoxcell/cpu.c
new file mode 100644
index 0000000..27f9c7f
--- /dev/null
+++ b/arch/arm/cpu/arm926ejs/picoxcell/cpu.c
@@ -0,0 +1,95 @@
+/*****************************************************************************
+ * $picoChipHeaderSubst$
+ *****************************************************************************/
+
+/*!
+ * \file cpu.c
+ * \brief Various useful functions.
+ *
+ * Copyright (c) 2006-2011 Picochip Ltd
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * All enquiries to support@picochip.com
+ */
+
+/* Includes ---------------------------------------------------------------- */
+#include <common.h>
+#include <asm/arch/utilities.h>
+#include <netdev.h>
+
+/* Macros ------------------------------------------------------------------ */
+
+/* Constants --------------------------------------------------------------- */
+
+/* Types ------------------------------------------------------------------- */
+
+/* Prototypes--------------------------------------------------------------- */
+
+/* Functions --------------------------------------------------------------- */
+
+/*****************************************************************************
+ *
+ * print_cpuinfo()
+ *
+ * Purpose: Display some useful info about the cpu we are running on.
+ *
+ * Returns: 0 - Success
+ *
+ *****************************************************************************/
+int print_cpuinfo (void)
+{
+	unsigned int device_id, device_rev;
+
+	printf ("CPU:   ");
+
+	device_id = picoxcell_get_device_id ();	/* Read the device id */
+	device_rev = picoxcell_get_revision ();	/* Read the revision code */
+
+	switch (device_id) {
+	case PC302_DEVICE_ID:
+		printf ("PC302 Rev %01d\n", device_rev);
+		break;
+	case PC312_DEVICE_ID:
+		printf ("PC312 Rev %01d\n", device_rev);
+		break;
+	case PC313_DEVICE_ID:
+		printf ("PC313 Rev %01d\n", device_rev);
+		break;
+	case PC323_DEVICE_ID:
+		printf ("PC323 Rev %01d\n", device_rev);
+		break;
+	case PC333_DEVICE_ID:
+		printf ("PC333 Rev %01d\n", device_rev);
+		break;
+	case PC3008_DEVICE_ID:
+		printf ("PC3008 Rev %01d\n", device_rev);
+		break;
+	default:
+		panic ("Unknown device type !\n");
+	}
+
+	return 0;
+}
+
+/*****************************************************************************
+ *
+ * cpu_eth_init()
+ *
+ * Purpose: Initialize the Ethernet controller
+ *
+ * Returns: 0 - Success
+ *
+ *****************************************************************************/
+int cpu_eth_init (bd_t * bis)
+{
+	int ret = -1;
+
+#ifdef CONFIG_DW_EMAC
+	ret = picoxcell_eth_register (bis);
+#endif
+
+	return ret;
+}
diff --git a/arch/arm/cpu/arm926ejs/picoxcell/utilities.c b/arch/arm/cpu/arm926ejs/picoxcell/utilities.c
index 6c8dfb7..684defe 100644
--- a/arch/arm/cpu/arm926ejs/picoxcell/utilities.c
+++ b/arch/arm/cpu/arm926ejs/picoxcell/utilities.c
@@ -21,6 +21,7 @@
 #include <asm/arch/picoxcell.h>
 #include <asm/arch/axi2cfg.h>
 #include <asm/arch/fuse.h>
+#include <asm/arch/timer.h>
 #include <asm/arch/utilities.h>
 
 /* Macros ------------------------------------------------------------------ */
@@ -200,3 +201,24 @@ __inline int is_pc3x3 (void)
 	return (dev_id == PC313_DEVICE_ID ||
 		dev_id == PC323_DEVICE_ID || dev_id == PC333_DEVICE_ID);
 }
+
+void picoxcell_timer_start (int timer)
+{
+	/* Make sure the timer is disabled */
+	picoxcell_write_register (0, (CONFIG_SYS_TIMERBASE +
+				      TIMERNCONTROLREGOFFSET (timer)));
+
+	/* Initialise the timer to all 1's.
+	 * We do this  because we want to run
+	 * the timer in free running mode.
+	 */
+	picoxcell_write_register (0xFFFFFFFF, (CONFIG_SYS_TIMERBASE +
+					       TIMERNLOADCOUNTREGOFFSET
+					       (timer)));
+
+	/* Start the timer in free running mode */
+	picoxcell_write_register ((TIMERINTERRUPTMASK | TIMERENABLE),
+				  (CONFIG_SYS_TIMERBASE +
+				   TIMERNCONTROLREGOFFSET (timer)));
+
+}
diff --git a/arch/arm/include/asm/arch-picoxcell/utilities.h b/arch/arm/include/asm/arch-picoxcell/utilities.h
index 16b83bd..efc68da 100644
--- a/arch/arm/include/asm/arch-picoxcell/utilities.h
+++ b/arch/arm/include/asm/arch-picoxcell/utilities.h
@@ -105,4 +105,12 @@ void syscfg_update (u32 mask, u32 val);
  */
 __inline int is_pc3x3 (void);
 
+/*!
+ * Start a timer in free running mode
+ *
+ * \param timer, the timer to start
+ */
+void picoxcell_timer_start (int timer);
+
+
 #endif /* __PICOXCELL_UTILS_H__ */
diff --git a/board/picochip/pc7302/pc7302.c b/board/picochip/pc7302/pc7302.c
index d61ec67..02b58f3 100644
--- a/board/picochip/pc7302/pc7302.c
+++ b/board/picochip/pc7302/pc7302.c
@@ -17,11 +17,9 @@
 
 /* Includes ---------------------------------------------------------------- */
 #include <common.h>
-#include <asm/arch/timer.h>
-#include <asm/arch/utilities.h>
 #include <asm/arch/mux.h>
+#include <asm/arch/utilities.h>
 #include <asm/arch/picoxcell_gpio.h>
-#include <netdev.h>
 
 /* Macros ------------------------------------------------------------------ */
 
@@ -29,14 +27,6 @@
 DECLARE_GLOBAL_DATA_PTR;
 
 /* Prototypes--------------------------------------------------------------- */
-/*!
- *
- * Start a timer in free running mode
- *
- * \param timer, the timer to start
- *
- */
-static void picoxcell_timer_start (int timer);
 
 /* Functions --------------------------------------------------------------- */
 
@@ -108,48 +98,6 @@ int checkboard (void)
 
 /*****************************************************************************
  *
- * print_cpuinfo()
- *
- * Purpose: Display some useful info about the cpu we are running on.
- *
- * Returns: 0 - Success
- *
- *****************************************************************************/
-int print_cpuinfo (void)
-{
-	unsigned int device_id, device_rev;
-
-	/* What device are we running on ? */
-	printf ("CPU:   ");
-
-	device_id = picoxcell_get_device_id ();	/* Read the device id */
-	device_rev = picoxcell_get_revision ();	/* Read the revision code */
-
-	switch (device_id) {
-	case PC302_DEVICE_ID:
-		printf ("PC302 Rev %04d\n", device_rev);
-		break;
-	case PC312_DEVICE_ID:
-		printf ("PC312 Rev %04d\n", device_rev);
-		break;
-	case PC313_DEVICE_ID:
-		printf ("PC313 Rev %04d\n", device_rev);
-		break;
-	case PC323_DEVICE_ID:
-		printf ("PC323 Rev %04d\n", device_rev);
-		break;
-	case PC333_DEVICE_ID:
-		printf ("PC333 Rev %04d\n", device_rev);
-		break;
-	default:
-		printf ("Unknown !\n");
-	}
-
-	return 0;
-}
-
-/*****************************************************************************
- *
  * misc_init_r()
  *
  * Purpose: Miscellaneous platform dependent initialisations
@@ -167,7 +115,7 @@ int misc_init_r (void)
  *
  * dram_init()
  *
- * Purpose: Initialize the DDR SDRAM info in the board data structure
+ * Purpose: Initialize the DDR SDRAM size info.
  *
  * Returns: 0 - Success
  *
@@ -179,51 +127,18 @@ int dram_init (void)
 	return 0;
 }
 
-void dram_init_banksize (void)
-{
-	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
-	gd->bd->bi_dram[0].size =
-	    get_ram_size ((long *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE);
-}
-
-static void picoxcell_timer_start (int timer)
-{
-	/* Make sure the timer is disabled */
-	picoxcell_write_register (0, (CONFIG_SYS_TIMERBASE +
-				      TIMERNCONTROLREGOFFSET (timer)));
-
-	/* Initialise the timer to all 1's.
-	 * We do this  because we want to run
-	 * the timer in free running mode.
-	 */
-	picoxcell_write_register (0xFFFFFFFF, (CONFIG_SYS_TIMERBASE +
-					       TIMERNLOADCOUNTREGOFFSET
-					       (timer)));
-
-	/* Start the timer in free running mode */
-	picoxcell_write_register ((TIMERINTERRUPTMASK | TIMERENABLE),
-				  (CONFIG_SYS_TIMERBASE +
-				   TIMERNCONTROLREGOFFSET (timer)));
-
-}
-
 /*****************************************************************************
  *
- * board_eth_init()
+ * dram_init_banksize()
  *
- * Purpose: Initialize the Ethernet controller
+ * Purpose: Initialize the the bd_t dram bank info.
  *
  * Returns: 0 - Success
  *
  *****************************************************************************/
-
-int board_eth_init (bd_t * bis)
+void dram_init_banksize (void)
 {
-	int ret = -1;
-
-#ifdef CONFIG_DW_EMAC
-	ret = picoxcell_eth_register (bis);
-#endif
-
-	return ret;
+	gd->bd->bi_dram[0].start = PHYS_SDRAM_1;
+	gd->bd->bi_dram[0].size =
+	    get_ram_size ((long *)PHYS_SDRAM_1, PHYS_SDRAM_1_SIZE);
 }
diff --git a/include/configs/picochippc7302-common.h b/include/configs/picochippc7302-common.h
index bff6b59..ab0a49f 100644
--- a/include/configs/picochippc7302-common.h
+++ b/include/configs/picochippc7302-common.h
@@ -69,6 +69,9 @@
 /* Display cpu info */
 #define CONFIG_DISPLAY_CPUINFO
 
+/* Do not reboot the platform on a panic */
+#define CONFIG_PANIC_HANG
+
 /*-----------------------------------------------------------------------
  * Stack Sizes
  *
-- 
1.7.0.4

