From 9d21e1392c3b255b172e3dfd91b3e8218d074ad4 Mon Sep 17 00:00:00 2001
From: Dave Aldridge <fovsoft@gmail.com>
Date: Tue, 30 Oct 2012 15:51:48 +0000
Subject: [PATCH 61/70] nand: fixup onfi parameter reading

The NAND_CMD_PARAM command now works correctly. This enables the
nand flash onfi parameter tables to be read, assuming an onfi compliant
nand flash is being used

This commit forms part of the resoultion of Mantis Issue #10680
---
 drivers/mtd/nand/denali.c |   41 +++++++++++++++++++++++++++++++----------
 1 files changed, 31 insertions(+), 10 deletions(-)

diff --git a/drivers/mtd/nand/denali.c b/drivers/mtd/nand/denali.c
index fd6c08f..3cd83a1 100644
--- a/drivers/mtd/nand/denali.c
+++ b/drivers/mtd/nand/denali.c
@@ -25,6 +25,7 @@
 #include <linux/compiler.h>
 #include <asm/processor.h>
 #include <asm/arch/picoxcell.h>
+#include <linux/mtd/nand.h>
 
 #include "denali.h"
 
@@ -1169,6 +1170,15 @@ static uint8_t denali_read_byte (struct mtd_info *mtd)
 	return result;
 }
 
+void denali_read_buf (struct mtd_info *mtd, uint8_t * buf, int len)
+{
+	struct nand_chip *nand = mtd->priv;
+	struct denali_nand_info *denali = nand->priv;
+
+	BUG_ON (len > sizeof (denali->buf.buf));
+	memcpy (buf, denali->buf.buf, len);
+}
+
 static void denali_select_chip (struct mtd_info *mtd, int chip)
 {
 	struct nand_chip *nand = mtd->priv;
@@ -1217,9 +1227,10 @@ static void denali_cmdfunc (struct mtd_info *mtd, unsigned int cmd, int col,
 {
 	struct nand_chip *nand = mtd->priv;
 	struct denali_nand_info *denali = nand->priv;
+	struct nand_onfi_params *p = &nand->onfi_params;
 
 	uint32_t addr, id;
-	int i;
+	int i, bytes_to_read;
 
 	nand_dbg ("denali_cmdfunc()\n");
 
@@ -1230,20 +1241,29 @@ static void denali_cmdfunc (struct mtd_info *mtd, unsigned int cmd, int col,
 		read_status (denali);
 		break;
 	case NAND_CMD_READID:
+                bytes_to_read = 5;
+
 	case NAND_CMD_PARAM:
-		reset_buf (denali);
-		/* sometimes ManufactureId read from register is not right
-		 * e.g. some of Micron MT29F32G08QAA MLC NAND chips
-		 * So here we send READID cmd to NAND insteand
-		 * */
+                /* When reading the onfi parameter
+                 * pages we read three copies
+                 */
+                bytes_to_read = sizeof(*p) * 3;
+
+                reset_buf (denali);
 		addr = (uint32_t) MODE_11 | BANK (denali->flash_bank);
-		index_addr (denali, (uint32_t) addr | 0, 0x90);
-		index_addr (denali, (uint32_t) addr | 1, 0);
-		for (i = 0; i < 5; i++) {
+		index_addr (denali, (uint32_t) addr | 0, cmd);
+		index_addr (denali, (uint32_t) addr | 1, col);
+
+                /* Allow some time for the command to
+                 * be actioned by the flash memory
+                 */
+                udelay (100);
+
+                for (i = 0; i < bytes_to_read; i++) {
 			index_addr_read_data (denali, (uint32_t) addr | 2, &id);
 			write_byte_to_buf (denali, id);
 		}
-		break;
+                break;
 	case NAND_CMD_READ0:
 	case NAND_CMD_SEQIN:
 		denali->page = page;
@@ -1404,6 +1424,7 @@ int board_nand_init (struct nand_chip *nand)
 	nand->select_chip = denali_select_chip;
 	nand->cmdfunc = denali_cmdfunc;
 	nand->read_byte = denali_read_byte;
+	nand->read_buf = denali_read_buf;
 	nand->waitfunc = denali_waitfunc;
 
 	/* support for multi nand
-- 
1.7.0.4

