From 5bee550ed67c1214adcbc61651a3b99810a0ecf4 Mon Sep 17 00:00:00 2001
From: Dave Aldridge <fovsoft@gmail.com>
Date: Mon, 29 Oct 2012 14:12:14 +0000
Subject: [PATCH 59/70] macb/picoxcell: fix some compiler warnings

There were some compiler warnings abut unused functions when building
different flavors of picoxcell devices. These warnings have now been fixed.
---
 drivers/net/macb.c |  102 +++++++++++++++++++++++++++-------------------------
 1 files changed, 53 insertions(+), 49 deletions(-)

diff --git a/drivers/net/macb.c b/drivers/net/macb.c
index 5c0473a..1e6faf5 100644
--- a/drivers/net/macb.c
+++ b/drivers/net/macb.c
@@ -51,7 +51,7 @@
 
 #include "macb.h"
 
-#if defined (CONFIG_PICOCHIP_PC7302)
+#if defined (CONFIG_PICOCHIP_PC7302) || defined (CONFIG_PICOCHIP_PC73032)
 #include <asm/arch/utilities.h>
 #endif
 
@@ -376,31 +376,29 @@ static int macb_phy_find(struct macb_device *macb)
 }
 #endif /* CONFIG_MACB_SEARCH_PHY */
 
-#if defined (CONFIG_PICOCHIP_PC7302) || defined (CONFIG_PICOCHIP_PC73032)
-static int is_link_up(struct macb_device *macb)
+#if defined (CONFIG_PICOCHIP_PC7302) || defined (CONFIG_PICOCHIP_PC3032)
+static void restart_phy_autoneg(struct macb_device *macb)
 {
-        u16 status = macb_mdio_read(macb, MII_BMSR);
-
-        return ! !(status & BMSR_LSTATUS);
+	macb_mdio_write(macb, MII_BMCR, (BMCR_ANENABLE | BMCR_ANRESTART));
+	udelay(100);
 }
 
-static int is_link_speed_100mbps(struct macb_device *macb)
+static void wait_for_autonegotiation_complete(struct macb_device *macb)
 {
-	u16 adv, lpa;
-
-	int media;
-
-	if (!is_link_up(macb))
-            return 0;
+	int i;
 
-	/* We have a link, get the speed */
-	adv = macb_mdio_read(macb, MII_ADVERTISE);
-	lpa = macb_mdio_read(macb, MII_LPA);
-	media = mii_nway_result(lpa & adv);
+	u16 status;
 
-	return media & (ADVERTISE_100FULL | ADVERTISE_100HALF) ? 1 : 0;
+	for (i = 0; i < CONFIG_SYS_MACB_AUTONEG_TIMEOUT / 100; i++) {
+		status = macb_mdio_read(macb, MII_BMSR);
+		if (status & BMSR_ANEGCOMPLETE)
+			break;
+		udelay(100);
+	}
 }
+#endif
 
+#if defined (CONFIG_PICOCHIP_PC73032)
 static int is_link_speed_1000mbps(struct macb_device *macb)
 {
 	u16 btsr;
@@ -424,32 +422,53 @@ static void disable_1000mpbs_advertisment(struct macb_device *macb)
         macb_mdio_write(macb, MII_CTRL1000, btcr);
 }
 
-static void setup_autoneg_advertisment(struct macb_device *macb)
+static void picoxcell_rgmii_fixup(struct macb_device *macb)
 {
-	u16 adv;
+	unsigned int rev = picoxcell_get_revision ();
 
-	adv = ADVERTISE_CSMA | ADVERTISE_100HALF | ADVERTISE_100FULL;
-	macb_mdio_write(macb, MII_ADVERTISE, adv);
+        /* If we are running on PC3032 Rev A silicon and we are using
+         * an rgmii interface then we can only transmit at 10/100 mpbs
+         */
+        if (picoxcell_is_pc30xx() && (rev == PC30XX_REV_A) &&
+            picoxcell_is_rgmii_enabled() && is_link_speed_1000mbps(macb)) {
+                disable_1000mpbs_advertisment(macb);
+                restart_phy_autoneg(macb);
+		wait_for_autonegotiation_complete(macb);
+        }
 }
+#endif
 
-static void restart_phy_autoneg(struct macb_device *macb)
+#if defined (CONFIG_PICOCHIP_PC7302)
+static int is_link_up(struct macb_device *macb)
 {
-	macb_mdio_write(macb, MII_BMCR, (BMCR_ANENABLE | BMCR_ANRESTART));
-	udelay(100);
+        u16 status = macb_mdio_read(macb, MII_BMSR);
+
+        return ! !(status & BMSR_LSTATUS);
 }
 
-static void wait_for_autonegotiation_complete(struct macb_device *macb)
+static int is_link_speed_100mbps(struct macb_device *macb)
 {
-	int i;
+	u16 adv, lpa;
 
-	u16 status;
+	int media;
 
-	for (i = 0; i < CONFIG_SYS_MACB_AUTONEG_TIMEOUT / 100; i++) {
-		status = macb_mdio_read(macb, MII_BMSR);
-		if (status & BMSR_ANEGCOMPLETE)
-			break;
-		udelay(100);
-	}
+	if (!is_link_up(macb))
+            return 0;
+
+	/* We have a link, get the speed */
+	adv = macb_mdio_read(macb, MII_ADVERTISE);
+	lpa = macb_mdio_read(macb, MII_LPA);
+	media = mii_nway_result(lpa & adv);
+
+	return media & (ADVERTISE_100FULL | ADVERTISE_100HALF) ? 1 : 0;
+}
+
+static void setup_autoneg_advertisment(struct macb_device *macb)
+{
+	u16 adv;
+
+	adv = ADVERTISE_CSMA | ADVERTISE_100HALF | ADVERTISE_100FULL;
+	macb_mdio_write(macb, MII_ADVERTISE, adv);
 }
 
 static void picoxcell_rmii_fixup(struct macb_device *macb)
@@ -467,21 +486,6 @@ static void picoxcell_rmii_fixup(struct macb_device *macb)
 		wait_for_autonegotiation_complete(macb);
 	}
 }
-
-static void picoxcell_rgmii_fixup(struct macb_device *macb)
-{
-	unsigned int rev = picoxcell_get_revision ();
-
-        /* If we are running on PC3032 Rev A silicon and we are using
-         * an rgmii interface then we can only transmit at 10/100 mpbs
-         */
-        if (picoxcell_is_pc30xx() && (rev == PC30XX_REV_A) &&
-            picoxcell_is_rgmii_enabled() && is_link_speed_1000mbps(macb)) {
-                disable_1000mpbs_advertisment(macb);
-                restart_phy_autoneg(macb);
-		wait_for_autonegotiation_complete(macb);
-        }
-}
 #endif
 
 static int macb_phy_init(struct macb_device *macb)
-- 
1.7.0.4

